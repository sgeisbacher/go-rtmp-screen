package ui

css statusOverlay() {
	position: absolute;
	font-size: 75px;
	color: white;
	text-align: center;
	width: 100%;
	top: 50%;
	text-shadow: black 0px 0px 10px;
}

css localIPOverlay() {
	position: absolute;
	font-size: 30px;
	color: white;
	bottom: 5%;
	right: 5%;
	text-align: center;
}

css localIPInfo() {
	font-size: 30px;
}

css videoContainerStyle() {
	position: relative;
}

css videoTagStyle() {
	width: 100%;
	height: 100%;
}

templ PlayerLayout() {
	<html>
		<head>
			<script src="https://unpkg.com/htmx.org@1.9.11" integrity="sha384-0gxUXCCR8yv9FM2b+U3FDbsKthCI66oH5IA9fHppQq9DDMHuMauqq1ZHBpJxQ0J0" crossorigin="anonymous"></script>
		</head>
		<body style="background-color:black;">
			<div id="video-container" class={ videoContainerStyle() }>
				<span id="status-overlay" class={ statusOverlay() } hx-get="/streamer/status" hx-trigger="every 1s" hx-swap="innerHTML"></span>
				<span id="local-ip-overlay" class={ localIPOverlay() } hx-get="/streamer/ip" hx-trigger="every 10s" hx-swap="innerHTML">Local IP: n/a</span>
			</div>
		</body>
		<script>
           function toggleFS() { console.log('title-click'); document.getElementById("video-container").requestFullscreen() }
           var el;
           let pc = new RTCPeerConnection();
           pc.ontrack = function (event) {
             el = document.createElement(event.track.kind);
             el.srcObject = event.streams[0];
             el.autoplay = true;
             el.controls = false;
             el.style = 'width:100%;height:100%';
             document.getElementById("video-container").appendChild(el);
           };

           pc.addTransceiver("video");

           pc.createOffer().then((offer) => {
             pc.setLocalDescription(offer);
             return fetch(`/createPeerConnection`, {
               method: "post",
               headers: {
                 Accept: "application/json, text/plain, */*",
                 "Content-Type": "application/json",
               },
               body: JSON.stringify(offer),
             });
           })
             .then((res) => res.json())
             .then((res) => pc.setRemoteDescription(res))
             .catch(alert);

        </script>
	</html>
}
