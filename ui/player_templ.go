// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.598
package ui

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func PlayerLayout() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<html><body><h1>rtmp-delay</h1><div id=\"rtmpFeed\"></div></body><script>\n            var el;\n            let pc = new RTCPeerConnection();\n            pc.ontrack = function (event) {\n              el = document.createElement(event.track.kind);\n              el.srcObject = event.streams[0];\n              el.autoplay = true;\n              el.controls = true;\n\n              document.getElementById(\"rtmpFeed\").appendChild(el);\n            };\n\n            pc.addTransceiver(\"video\");\n\n            pc.createOffer()\n              .then((offer) => {\n                pc.setLocalDescription(offer);\n                return fetch(`/createPeerConnection`, {\n                  method: \"post\",\n                  headers: {\n                    Accept: \"application/json, text/plain, */*\",\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify(offer),\n                });\n              })\n              .then((res) => res.json())\n              .then((res) => pc.setRemoteDescription(res))\n              .catch(alert);\n\n            setInterval(() => {\n              <!-- el.requestFullscreen(); -->\n              el.play();\n            }, 5000);\n          </script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
